<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="143" passed="0" failed="45" skipped="98">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-04-20T11:08:10Z" name="Suite" finished-at="2020-04-20T11:08:10Z" duration-ms="0">
    <groups>
    </groups>
  </suite> <!-- Suite -->
  <suite started-at="2020-04-20T11:08:06Z" name="Client Admin Suite" finished-at="2020-04-20T11:08:07Z" duration-ms="502">
    <groups>
    </groups>
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - SLItem" finished-at="2020-04-20T11:08:06Z" duration-ms="57">
      <class name="office.sirion.suite.clientAdmin.SLItem">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.SLItem@cd1e646]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="SLItemCreation(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.SLItem@cd1e646]" started-at="2020-04-20T11:08:06Z" name="SLItemCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SLItemCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.SLItem@cd1e646]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method signature="SLItemCreation(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.SLItem@cd1e646]" started-at="2020-04-20T11:08:06Z" name="SLItemCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SLItemCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.SLItem@cd1e646]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.SLItem@cd1e646]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.SLItem -->
    </test> <!-- Client Admin - SLItem -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - SLSubCategory" finished-at="2020-04-20T11:08:06Z" duration-ms="60">
      <class name="office.sirion.suite.clientAdmin.SLSubCategory">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.SLSubCategory@4bbf6d0e]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="SLSubCategoryCreation(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.SLSubCategory@4bbf6d0e]" started-at="2020-04-20T11:08:06Z" name="SLSubCategoryCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SLSubCategoryCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.SLSubCategory@4bbf6d0e]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method signature="SLSubCategoryCreation(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.SLSubCategory@4bbf6d0e]" started-at="2020-04-20T11:08:06Z" name="SLSubCategoryCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SLSubCategoryCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.SLSubCategory@4bbf6d0e]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.SLSubCategory@4bbf6d0e]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.SLSubCategory -->
    </test> <!-- Client Admin - SLSubCategory -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - ServiceCategory" finished-at="2020-04-20T11:08:06Z" duration-ms="58">
      <class name="office.sirion.suite.clientAdmin.ServiceCategory">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.ServiceCategory@3336e6b6]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="ServiceCategoryCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.ServiceCategory@3336e6b6]" started-at="2020-04-20T11:08:06Z" name="ServiceCategoryCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ServiceCategoryCreation -->
        <test-method signature="ServiceCategoryCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.ServiceCategory@3336e6b6]" started-at="2020-04-20T11:08:06Z" name="ServiceCategoryCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ServiceCategoryCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.ServiceCategory@3336e6b6]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.ServiceCategory@3336e6b6]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.ServiceCategory@3336e6b6]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.ServiceCategory -->
    </test> <!-- Client Admin - ServiceCategory -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - ContractPaper" finished-at="2020-04-20T11:08:06Z" duration-ms="57">
      <class name="office.sirion.suite.clientAdmin.ContractPaper">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.ContractPaper@2e32ccc5]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="ContractPaperCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.ContractPaper@2e32ccc5]" started-at="2020-04-20T11:08:06Z" name="ContractPaperCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ContractPaperCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.ContractPaper@2e32ccc5]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method signature="ContractPaperCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.ContractPaper@2e32ccc5]" started-at="2020-04-20T11:08:06Z" name="ContractPaperCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ContractPaperCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.ContractPaper@2e32ccc5]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.ContractPaper@2e32ccc5]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.ContractPaper -->
    </test> <!-- Client Admin - ContractPaper -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - OBCategory" finished-at="2020-04-20T11:08:06Z" duration-ms="62">
      <class name="office.sirion.suite.clientAdmin.OBCategory">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.OBCategory@4b2c5e02]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="OBCategoryCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.OBCategory@4b2c5e02]" started-at="2020-04-20T11:08:06Z" name="OBCategoryCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OBCategoryCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.OBCategory@4b2c5e02]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method signature="OBCategoryCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.OBCategory@4b2c5e02]" started-at="2020-04-20T11:08:06Z" name="OBCategoryCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OBCategoryCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.OBCategory@4b2c5e02]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.OBCategory@4b2c5e02]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.OBCategory -->
    </test> <!-- Client Admin - OBCategory -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - OBPerformanceType" finished-at="2020-04-20T11:08:06Z" duration-ms="58">
      <class name="office.sirion.suite.clientAdmin.OBPerformanceType">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.OBPerformanceType@1f760b47]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.OBPerformanceType@1f760b47]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method signature="OBPerformanceTypeCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.OBPerformanceType@1f760b47]" started-at="2020-04-20T11:08:06Z" name="OBPerformanceTypeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OBPerformanceTypeCreation -->
        <test-method signature="OBPerformanceTypeCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.OBPerformanceType@1f760b47]" started-at="2020-04-20T11:08:06Z" name="OBPerformanceTypeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OBPerformanceTypeCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.OBPerformanceType@1f760b47]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.OBPerformanceType@1f760b47]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.OBPerformanceType -->
    </test> <!-- Client Admin - OBPerformanceType -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - ContractService" finished-at="2020-04-20T11:08:06Z" duration-ms="59">
      <class name="office.sirion.suite.clientAdmin.ContractService">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.ContractService@495ee280]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="ContractServiceCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.ContractService@495ee280]" started-at="2020-04-20T11:08:06Z" name="ContractServiceCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ContractServiceCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.ContractService@495ee280]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.ContractService@495ee280]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.ContractService -->
    </test> <!-- Client Admin - ContractService -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - ActionType" finished-at="2020-04-20T11:08:06Z" duration-ms="3">
      <class name="office.sirion.suite.clientAdmin.ActionType">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.ActionType@4ef782af]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.ActionType@4ef782af]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method signature="ActionTypeCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.ActionType@4ef782af]" started-at="2020-04-20T11:08:06Z" name="ActionTypeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ActionTypeCreation -->
        <test-method signature="ActionTypeCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.ActionType@4ef782af]" started-at="2020-04-20T11:08:06Z" name="ActionTypeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ActionTypeCreation -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.ActionType@4ef782af]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.ActionType@4ef782af]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
      </class> <!-- office.sirion.suite.clientAdmin.ActionType -->
    </test> <!-- Client Admin - ActionType -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - ContractType" finished-at="2020-04-20T11:08:06Z" duration-ms="2">
      <class name="office.sirion.suite.clientAdmin.ContractType">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.ContractType@4c012563]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="ContractTypeCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.ContractType@4c012563]" started-at="2020-04-20T11:08:06Z" name="ContractTypeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ContractTypeCreation -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.ContractType@4c012563]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.ContractType@4c012563]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method signature="ContractTypeCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.ContractType@4c012563]" started-at="2020-04-20T11:08:06Z" name="ContractTypeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ContractTypeCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.ContractType@4c012563]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
      </class> <!-- office.sirion.suite.clientAdmin.ContractType -->
    </test> <!-- Client Admin - ContractType -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - ServiceSubCategory" finished-at="2020-04-20T11:08:06Z" duration-ms="59">
      <class name="office.sirion.suite.clientAdmin.ServiceSubCategory">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.ServiceSubCategory@4ea5b703]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="ServiceSubCategoryCreation(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.ServiceSubCategory@4ea5b703]" started-at="2020-04-20T11:08:06Z" name="ServiceSubCategoryCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ServiceSubCategoryCreation -->
        <test-method signature="ServiceSubCategoryCreation(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.ServiceSubCategory@4ea5b703]" started-at="2020-04-20T11:08:06Z" name="ServiceSubCategoryCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ServiceSubCategoryCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.ServiceSubCategory@4ea5b703]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.ServiceSubCategory@4ea5b703]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.ServiceSubCategory@4ea5b703]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.ServiceSubCategory -->
    </test> <!-- Client Admin - ServiceSubCategory -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - TermType" finished-at="2020-04-20T11:08:06Z" duration-ms="2">
      <class name="office.sirion.suite.clientAdmin.TermType">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.TermType@1cd629b3]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="TermTypeCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.TermType@1cd629b3]" started-at="2020-04-20T11:08:06Z" name="TermTypeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TermTypeCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.TermType@1cd629b3]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.TermType@1cd629b3]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.TermType@1cd629b3]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method signature="TermTypeCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.TermType@1cd629b3]" started-at="2020-04-20T11:08:06Z" name="TermTypeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TermTypeCreation -->
      </class> <!-- office.sirion.suite.clientAdmin.TermType -->
    </test> <!-- Client Admin - TermType -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - SLCategory" finished-at="2020-04-20T11:08:06Z" duration-ms="58">
      <class name="office.sirion.suite.clientAdmin.SLCategory">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.SLCategory@3eb91815]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="SLCategoryCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.SLCategory@3eb91815]" started-at="2020-04-20T11:08:06Z" name="SLCategoryCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SLCategoryCreation -->
        <test-method signature="SLCategoryCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.SLCategory@3eb91815]" started-at="2020-04-20T11:08:06Z" name="SLCategoryCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SLCategoryCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.SLCategory@3eb91815]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.SLCategory@3eb91815]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.SLCategory@3eb91815]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.SLCategory -->
    </test> <!-- Client Admin - SLCategory -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - CRType" finished-at="2020-04-20T11:08:06Z" duration-ms="4">
      <class name="office.sirion.suite.clientAdmin.CRType">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.CRType@266374ef]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="CRTypeCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.CRType@266374ef]" started-at="2020-04-20T11:08:06Z" name="CRTypeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CRTypeCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.CRType@266374ef]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method signature="CRTypeCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.CRType@266374ef]" started-at="2020-04-20T11:08:06Z" name="CRTypeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CRTypeCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.CRType@266374ef]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.CRType@266374ef]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.CRType -->
    </test> <!-- Client Admin - CRType -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - OBPhase" finished-at="2020-04-20T11:08:06Z" duration-ms="58">
      <class name="office.sirion.suite.clientAdmin.OBPhase">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.OBPhase@928763c]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="OBPhaseCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.OBPhase@928763c]" started-at="2020-04-20T11:08:06Z" name="OBPhaseCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OBPhaseCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.OBPhase@928763c]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.OBPhase@928763c]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method signature="OBPhaseCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.OBPhase@928763c]" started-at="2020-04-20T11:08:06Z" name="OBPhaseCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OBPhaseCreation -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.OBPhase@928763c]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.OBPhase -->
    </test> <!-- Client Admin - OBPhase -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - GovernanceBodyType" finished-at="2020-04-20T11:08:06Z" duration-ms="7">
      <class name="office.sirion.suite.clientAdmin.GovernanceBodyType">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.GovernanceBodyType@27e47833]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="GovernanceBodyTypeCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.GovernanceBodyType@27e47833]" started-at="2020-04-20T11:08:06Z" name="GovernanceBodyTypeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GovernanceBodyTypeCreation -->
        <test-method signature="GovernanceBodyTypeCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.GovernanceBodyType@27e47833]" started-at="2020-04-20T11:08:06Z" name="GovernanceBodyTypeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GovernanceBodyTypeCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.GovernanceBodyType@27e47833]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.GovernanceBodyType@27e47833]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.GovernanceBodyType@27e47833]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.GovernanceBodyType -->
    </test> <!-- Client Admin - GovernanceBodyType -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - UnitType" finished-at="2020-04-20T11:08:06Z" duration-ms="2">
      <class name="office.sirion.suite.clientAdmin.UnitType">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UnitType@379614be]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.UnitType@379614be]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.UnitType@379614be]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method signature="UnitTypeCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UnitType@379614be]" started-at="2020-04-20T11:08:06Z" name="UnitTypeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UnitTypeCreation -->
        <test-method signature="UnitTypeCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UnitType@379614be]" started-at="2020-04-20T11:08:06Z" name="UnitTypeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UnitTypeCreation -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UnitType@379614be]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UnitType -->
    </test> <!-- Client Admin - UnitType -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - ClauseCategory" finished-at="2020-04-20T11:08:06Z" duration-ms="2">
      <class name="office.sirion.suite.clientAdmin.ClauseCategory">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.ClauseCategory@4b34fff9]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="ClauseCategoryCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.ClauseCategory@4b34fff9]" started-at="2020-04-20T11:08:06Z" name="ClauseCategoryCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClauseCategoryCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.ClauseCategory@4b34fff9]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.ClauseCategory@4b34fff9]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method signature="ClauseCategoryCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.ClauseCategory@4b34fff9]" started-at="2020-04-20T11:08:06Z" name="ClauseCategoryCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClauseCategoryCreation -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.ClauseCategory@4b34fff9]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.ClauseCategory -->
    </test> <!-- Client Admin - ClauseCategory -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - WORType" finished-at="2020-04-20T11:08:06Z" duration-ms="4">
      <class name="office.sirion.suite.clientAdmin.WORType">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.WORType@1787bc24]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="WORTypeCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.WORType@1787bc24]" started-at="2020-04-20T11:08:06Z" name="WORTypeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WORTypeCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.WORType@1787bc24]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method signature="WORTypeCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.WORType@1787bc24]" started-at="2020-04-20T11:08:06Z" name="WORTypeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WORTypeCreation -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.WORType@1787bc24]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.WORType@1787bc24]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
      </class> <!-- office.sirion.suite.clientAdmin.WORType -->
    </test> <!-- Client Admin - WORType -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - InterpretationType" finished-at="2020-04-20T11:08:06Z" duration-ms="2">
      <class name="office.sirion.suite.clientAdmin.InterpretationType">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.InterpretationType@6b58b9e9]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="InterpretationTypeCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.InterpretationType@6b58b9e9]" started-at="2020-04-20T11:08:06Z" name="InterpretationTypeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InterpretationTypeCreation -->
        <test-method signature="InterpretationTypeCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.InterpretationType@6b58b9e9]" started-at="2020-04-20T11:08:06Z" name="InterpretationTypeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InterpretationTypeCreation -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.InterpretationType@6b58b9e9]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.InterpretationType@6b58b9e9]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.InterpretationType@6b58b9e9]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
      </class> <!-- office.sirion.suite.clientAdmin.InterpretationType -->
    </test> <!-- Client Admin - InterpretationType -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - AgreementType" finished-at="2020-04-20T11:08:06Z" duration-ms="2">
      <class name="office.sirion.suite.clientAdmin.AgreementType">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.AgreementType@2b9ed6da]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="AgreementTypeCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.AgreementType@2b9ed6da]" started-at="2020-04-20T11:08:06Z" name="AgreementTypeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AgreementTypeCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.AgreementType@2b9ed6da]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.AgreementType@2b9ed6da]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method signature="AgreementTypeCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.AgreementType@2b9ed6da]" started-at="2020-04-20T11:08:06Z" name="AgreementTypeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AgreementTypeCreation -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.AgreementType@2b9ed6da]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.AgreementType -->
    </test> <!-- Client Admin - AgreementType -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - CRClass" finished-at="2020-04-20T11:08:06Z" duration-ms="13">
      <class name="office.sirion.suite.clientAdmin.CRClass">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.CRClass@28b46423]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="CRClassCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.CRClass@28b46423]" started-at="2020-04-20T11:08:06Z" name="CRClassCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CRClassCreation -->
        <test-method signature="CRClassCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.CRClass@28b46423]" started-at="2020-04-20T11:08:06Z" name="CRClassCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CRClassCreation -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.CRClass@28b46423]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.CRClass@28b46423]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.CRClass@28b46423]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
      </class> <!-- office.sirion.suite.clientAdmin.CRClass -->
    </test> <!-- Client Admin - CRClass -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - IssueType" finished-at="2020-04-20T11:08:06Z" duration-ms="24">
      <class name="office.sirion.suite.clientAdmin.IssueType">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.IssueType@2fba3fc4]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="IssueTypeCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.IssueType@2fba3fc4]" started-at="2020-04-20T11:08:06Z" name="IssueTypeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IssueTypeCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.IssueType@2fba3fc4]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method signature="IssueTypeCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.IssueType@2fba3fc4]" started-at="2020-04-20T11:08:06Z" name="IssueTypeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IssueTypeCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.IssueType@2fba3fc4]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.IssueType@2fba3fc4]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.IssueType -->
    </test> <!-- Client Admin - IssueType -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - VendorClassification" finished-at="2020-04-20T11:08:06Z" duration-ms="7">
      <class name="office.sirion.suite.clientAdmin.VendorClassification">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.VendorClassification@1b266842]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="VendorClassificationCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.VendorClassification@1b266842]" started-at="2020-04-20T11:08:06Z" name="VendorClassificationCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VendorClassificationCreation -->
        <test-method signature="VendorClassificationCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.VendorClassification@1b266842]" started-at="2020-04-20T11:08:06Z" name="VendorClassificationCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VendorClassificationCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.VendorClassification@1b266842]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.VendorClassification@1b266842]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.VendorClassification@1b266842]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.VendorClassification -->
    </test> <!-- Client Admin - VendorClassification -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - ClauseType" finished-at="2020-04-20T11:08:06Z" duration-ms="9">
      <class name="office.sirion.suite.clientAdmin.ClauseType">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.ClauseType@45ac5f9b]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="ClauseTypeCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.ClauseType@45ac5f9b]" started-at="2020-04-20T11:08:06Z" name="ClauseTypeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClauseTypeCreation -->
        <test-method signature="ClauseTypeCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.ClauseType@45ac5f9b]" started-at="2020-04-20T11:08:06Z" name="ClauseTypeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClauseTypeCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.ClauseType@45ac5f9b]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.ClauseType@45ac5f9b]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.ClauseType@45ac5f9b]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.ClauseType -->
    </test> <!-- Client Admin - ClauseType -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - CompanyPosition" finished-at="2020-04-20T11:08:06Z" duration-ms="7">
      <class name="office.sirion.suite.clientAdmin.CompanyPosition">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.CompanyPosition@4167d97b]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="CompanyPositionCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.CompanyPosition@4167d97b]" started-at="2020-04-20T11:08:06Z" name="CompanyPositionCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CompanyPositionCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.CompanyPosition@4167d97b]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.CompanyPosition@4167d97b]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
        <test-method signature="CompanyPositionCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.CompanyPosition@4167d97b]" started-at="2020-04-20T11:08:06Z" name="CompanyPositionCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CompanyPositionCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.CompanyPosition@4167d97b]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
      </class> <!-- office.sirion.suite.clientAdmin.CompanyPosition -->
    </test> <!-- Client Admin - CompanyPosition -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - IndustryType" finished-at="2020-04-20T11:08:06Z" duration-ms="4">
      <class name="office.sirion.suite.clientAdmin.IndustryType">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.IndustryType@398dada8]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.IndustryType@398dada8]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method signature="IndustryTypeCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.IndustryType@398dada8]" started-at="2020-04-20T11:08:06Z" name="IndustryTypeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IndustryTypeCreation -->
        <test-method signature="IndustryTypeCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.IndustryType@398dada8]" started-at="2020-04-20T11:08:06Z" name="IndustryTypeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IndustryTypeCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.IndustryType@398dada8]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.IndustryType@398dada8]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.IndustryType -->
    </test> <!-- Client Admin - IndustryType -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - BusinessUnit" finished-at="2020-04-20T11:08:06Z" duration-ms="3">
      <class name="office.sirion.suite.clientAdmin.BusinessUnit">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.BusinessUnit@1ae8bcbc]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.BusinessUnit@1ae8bcbc]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method signature="BusinessUnitCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.BusinessUnit@1ae8bcbc]" started-at="2020-04-20T11:08:06Z" name="BusinessUnitCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BusinessUnitCreation -->
        <test-method signature="BusinessUnitCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.BusinessUnit@1ae8bcbc]" started-at="2020-04-20T11:08:06Z" name="BusinessUnitCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BusinessUnitCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.BusinessUnit@1ae8bcbc]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.BusinessUnit@1ae8bcbc]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.BusinessUnit -->
    </test> <!-- Client Admin - BusinessUnit -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - PaperType" finished-at="2020-04-20T11:08:06Z" duration-ms="17">
      <class name="office.sirion.suite.clientAdmin.PaperType">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.PaperType@27adc16e]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.PaperType@27adc16e]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.PaperType@27adc16e]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method signature="PaperTypeCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.PaperType@27adc16e]" started-at="2020-04-20T11:08:06Z" name="PaperTypeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PaperTypeCreation -->
        <test-method signature="PaperTypeCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.PaperType@27adc16e]" started-at="2020-04-20T11:08:06Z" name="PaperTypeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PaperTypeCreation -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.PaperType@27adc16e]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.PaperType -->
    </test> <!-- Client Admin - PaperType -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - RiskType" finished-at="2020-04-20T11:08:06Z" duration-ms="2">
      <class name="office.sirion.suite.clientAdmin.RiskType">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.RiskType@1ef6d34c]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="RiskTypeCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.RiskType@1ef6d34c]" started-at="2020-04-20T11:08:06Z" name="RiskTypeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RiskTypeCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.RiskType@1ef6d34c]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.RiskType@1ef6d34c]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.RiskType@1ef6d34c]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
        <test-method signature="RiskTypeCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.RiskType@1ef6d34c]" started-at="2020-04-20T11:08:06Z" name="RiskTypeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RiskTypeCreation -->
      </class> <!-- office.sirion.suite.clientAdmin.RiskType -->
    </test> <!-- Client Admin - RiskType -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - BusinessLine" finished-at="2020-04-20T11:08:06Z" duration-ms="2">
      <class name="office.sirion.suite.clientAdmin.BusinessLine">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.BusinessLine@35399441]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="BusinessLineCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.BusinessLine@35399441]" started-at="2020-04-20T11:08:06Z" name="BusinessLineCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BusinessLineCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.BusinessLine@35399441]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.BusinessLine@35399441]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.BusinessLine@35399441]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method signature="BusinessLineCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.BusinessLine@35399441]" started-at="2020-04-20T11:08:06Z" name="BusinessLineCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BusinessLineCreation -->
      </class> <!-- office.sirion.suite.clientAdmin.BusinessLine -->
    </test> <!-- Client Admin - BusinessLine -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - TemplateCategory" finished-at="2020-04-20T11:08:06Z" duration-ms="4">
      <class name="office.sirion.suite.clientAdmin.TemplateCategory">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.TemplateCategory@5c669da8]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="TemplateCategoryCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.TemplateCategory@5c669da8]" started-at="2020-04-20T11:08:06Z" name="TemplateCategoryCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TemplateCategoryCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.TemplateCategory@5c669da8]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method signature="TemplateCategoryCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.TemplateCategory@5c669da8]" started-at="2020-04-20T11:08:06Z" name="TemplateCategoryCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TemplateCategoryCreation -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.TemplateCategory@5c669da8]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.TemplateCategory@5c669da8]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
      </class> <!-- office.sirion.suite.clientAdmin.TemplateCategory -->
    </test> <!-- Client Admin - TemplateCategory -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - Service" finished-at="2020-04-20T11:08:06Z" duration-ms="6">
      <class name="office.sirion.suite.clientAdmin.Service">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.Service@30bce90b]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="ServiceCreation(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.Service@30bce90b]" started-at="2020-04-20T11:08:06Z" name="ServiceCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ServiceCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.Service@30bce90b]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.Service@30bce90b]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.Service@30bce90b]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method signature="ServiceCreation(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.Service@30bce90b]" started-at="2020-04-20T11:08:06Z" name="ServiceCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ServiceCreation -->
        <test-method signature="ServiceCreation(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.Service@30bce90b]" started-at="2020-04-20T11:08:06Z" name="ServiceCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ServiceCreation -->
        <test-method signature="ServiceCreation(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.Service@30bce90b]" started-at="2020-04-20T11:08:06Z" name="ServiceCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ServiceCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.Service@30bce90b]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.Service@30bce90b]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method signature="ServiceCreation(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.Service@30bce90b]" started-at="2020-04-20T11:08:06Z" name="ServiceCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ServiceCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.Service@30bce90b]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method signature="ServiceCreation(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.Service@30bce90b]" started-at="2020-04-20T11:08:06Z" name="ServiceCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ServiceCreation -->
        <test-method signature="ServiceCreation(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.Service@30bce90b]" started-at="2020-04-20T11:08:06Z" name="ServiceCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ServiceCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.Service@30bce90b]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.Service@30bce90b]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
        <test-method signature="ServiceCreation(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.Service@30bce90b]" started-at="2020-04-20T11:08:06Z" name="ServiceCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ServiceCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.Service@30bce90b]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
      </class> <!-- office.sirion.suite.clientAdmin.Service -->
    </test> <!-- Client Admin - Service -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - Function" finished-at="2020-04-20T11:08:06Z" duration-ms="2">
      <class name="office.sirion.suite.clientAdmin.Function">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.Function@662706a7]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="FunctionCreation(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.Function@662706a7]" started-at="2020-04-20T11:08:06Z" name="FunctionCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FunctionCreation -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.Function@662706a7]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.Function@662706a7]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.Function@662706a7]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method signature="FunctionCreation(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.Function@662706a7]" started-at="2020-04-20T11:08:06Z" name="FunctionCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FunctionCreation -->
      </class> <!-- office.sirion.suite.clientAdmin.Function -->
    </test> <!-- Client Admin - Function -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - Region" finished-at="2020-04-20T11:08:06Z" duration-ms="3">
      <class name="office.sirion.suite.clientAdmin.Region">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.Region@5b7a8434]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.Region@5b7a8434]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method signature="RegionCreation(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.Region@5b7a8434]" started-at="2020-04-20T11:08:06Z" name="RegionCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegionCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.Region@5b7a8434]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method signature="RegionCreation(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.Region@5b7a8434]" started-at="2020-04-20T11:08:06Z" name="RegionCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegionCreation -->
        <test-method signature="RegionCreation(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.Region@5b7a8434]" started-at="2020-04-20T11:08:06Z" name="RegionCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegionCreation -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.Region@5b7a8434]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.Region@5b7a8434]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
      </class> <!-- office.sirion.suite.clientAdmin.Region -->
    </test> <!-- Client Admin - Region -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - CurrencyConversionMatrix" finished-at="2020-04-20T11:08:06Z" duration-ms="2">
      <class name="office.sirion.suite.clientAdmin.CurrencyConversionMatrix">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.CurrencyConversionMatrix@5026735c]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.CurrencyConversionMatrix@5026735c]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method signature="CurrencyConversionMatrixCreation(java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.CurrencyConversionMatrix@5026735c]" started-at="2020-04-20T11:08:06Z" name="CurrencyConversionMatrixCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CurrencyConversionMatrixCreation -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.CurrencyConversionMatrix@5026735c]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.CurrencyConversionMatrix -->
    </test> <!-- Client Admin - CurrencyConversionMatrix -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - OrganizationBranding" finished-at="2020-04-20T11:08:06Z" duration-ms="4">
      <class name="office.sirion.suite.clientAdmin.OrganizationBranding">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.OrganizationBranding@13d4992d]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="OrganizationBrandingTest()[pri:0, instance:office.sirion.suite.clientAdmin.OrganizationBranding@13d4992d]" started-at="2020-04-20T11:08:06Z" name="OrganizationBrandingTest" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrganizationBrandingTest -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.OrganizationBranding@13d4992d]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.OrganizationBranding@13d4992d]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
      </class> <!-- office.sirion.suite.clientAdmin.OrganizationBranding -->
    </test> <!-- Client Admin - OrganizationBranding -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - Geography" finished-at="2020-04-20T11:08:06Z" duration-ms="13">
      <class name="office.sirion.suite.clientAdmin.Geography">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.Geography@4816278d]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.Geography@4816278d]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method signature="GeographyCreation(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.Geography@4816278d]" started-at="2020-04-20T11:08:06Z" name="GeographyCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GeographyCreation -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.Geography@4816278d]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
        <test-method signature="GeographyCreation(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.Geography@4816278d]" started-at="2020-04-20T11:08:06Z" name="GeographyCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GeographyCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.Geography@4816278d]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
      </class> <!-- office.sirion.suite.clientAdmin.Geography -->
    </test> <!-- Client Admin - Geography -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - AdvancedOrganization" finished-at="2020-04-20T11:08:06Z" duration-ms="4">
      <class name="office.sirion.suite.clientAdmin.AdvancedOrganization">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.AdvancedOrganization@5e3d57c7]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.AdvancedOrganization@5e3d57c7]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.AdvancedOrganization@5e3d57c7]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
        <test-method signature="AdvancedOrganizationTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.AdvancedOrganization@5e3d57c7]" started-at="2020-04-20T11:08:06Z" name="AdvancedOrganizationTest" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AdvancedOrganizationTest -->
      </class> <!-- office.sirion.suite.clientAdmin.AdvancedOrganization -->
    </test> <!-- Client Admin - AdvancedOrganization -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - Discrepancy Reason Type" finished-at="2020-04-20T11:08:06Z" duration-ms="7">
      <class name="office.sirion.suite.clientAdmin.DiscrepancyReasonType">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.DiscrepancyReasonType@27d5a580]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="DiscrepancyReasonTypeCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.DiscrepancyReasonType@27d5a580]" started-at="2020-04-20T11:08:06Z" name="DiscrepancyReasonTypeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DiscrepancyReasonTypeCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.DiscrepancyReasonType@27d5a580]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.DiscrepancyReasonType@27d5a580]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.DiscrepancyReasonType@27d5a580]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
        <test-method signature="DiscrepancyReasonTypeCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.DiscrepancyReasonType@27d5a580]" started-at="2020-04-20T11:08:06Z" name="DiscrepancyReasonTypeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DiscrepancyReasonTypeCreation -->
      </class> <!-- office.sirion.suite.clientAdmin.DiscrepancyReasonType -->
    </test> <!-- Client Admin - Discrepancy Reason Type -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - Frequency" finished-at="2020-04-20T11:08:06Z" duration-ms="2">
      <class name="office.sirion.suite.clientAdmin.Frequency">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.Frequency@63eef88a]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.Frequency@63eef88a]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method signature="FrequencyCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.Frequency@63eef88a]" started-at="2020-04-20T11:08:06Z" name="FrequencyCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FrequencyCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.Frequency@63eef88a]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method signature="FrequencyCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.Frequency@63eef88a]" started-at="2020-04-20T11:08:06Z" name="FrequencyCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FrequencyCreation -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.Frequency@63eef88a]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.Frequency -->
    </test> <!-- Client Admin - Frequency -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - TransactionType" finished-at="2020-04-20T11:08:06Z" duration-ms="17">
      <class name="office.sirion.suite.clientAdmin.TransactionType">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.TransactionType@6fa34d52]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.TransactionType@6fa34d52]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method signature="TransactionTypeCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.TransactionType@6fa34d52]" started-at="2020-04-20T11:08:06Z" name="TransactionTypeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TransactionTypeCreation -->
        <test-method signature="TransactionTypeCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.TransactionType@6fa34d52]" started-at="2020-04-20T11:08:06Z" name="TransactionTypeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TransactionTypeCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.TransactionType@6fa34d52]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.TransactionType@6fa34d52]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.TransactionType -->
    </test> <!-- Client Admin - TransactionType -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - Tier" finished-at="2020-04-20T11:08:06Z" duration-ms="8">
      <class name="office.sirion.suite.clientAdmin.Tier">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.Tier@3e74829]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="TierCreation(java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.Tier@3e74829]" started-at="2020-04-20T11:08:06Z" name="TierCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TierCreation -->
        <test-method signature="TierCreation(java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.Tier@3e74829]" started-at="2020-04-20T11:08:06Z" name="TierCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TierCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.Tier@3e74829]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.Tier@3e74829]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.Tier@3e74829]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
        <test-method signature="TierCreation(java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.Tier@3e74829]" started-at="2020-04-20T11:08:06Z" name="TierCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TierCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.Tier@3e74829]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
      </class> <!-- office.sirion.suite.clientAdmin.Tier -->
    </test> <!-- Client Admin - Tier -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - Market" finished-at="2020-04-20T11:08:06Z" duration-ms="3">
      <class name="office.sirion.suite.clientAdmin.Market">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.Market@225129c]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="MarketCreation(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.Market@225129c]" started-at="2020-04-20T11:08:06Z" name="MarketCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MarketCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.Market@225129c]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.Market@225129c]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method signature="MarketCreation(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.Market@225129c]" started-at="2020-04-20T11:08:06Z" name="MarketCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MarketCreation -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.Market@225129c]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.Market -->
    </test> <!-- Client Admin - Market -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - RegionHub" finished-at="2020-04-20T11:08:06Z" duration-ms="2">
      <class name="office.sirion.suite.clientAdmin.RegionHub">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.RegionHub@7aaca91a]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="RegionHubCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.RegionHub@7aaca91a]" started-at="2020-04-20T11:08:06Z" name="RegionHubCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegionHubCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.RegionHub@7aaca91a]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method signature="RegionHubCreation(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.RegionHub@7aaca91a]" started-at="2020-04-20T11:08:06Z" name="RegionHubCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegionHubCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.RegionHub@7aaca91a]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.RegionHub@7aaca91a]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.RegionHub -->
    </test> <!-- Client Admin - RegionHub -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - CompanyCode" finished-at="2020-04-20T11:08:06Z" duration-ms="2">
      <class name="office.sirion.suite.clientAdmin.CompanyCode">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.CompanyCode@6e005dc9]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="CompanyCodeCreation(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.CompanyCode@6e005dc9]" started-at="2020-04-20T11:08:06Z" name="CompanyCodeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CompanyCodeCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.CompanyCode@6e005dc9]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method signature="CompanyCodeCreation(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.CompanyCode@6e005dc9]" started-at="2020-04-20T11:08:06Z" name="CompanyCodeCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CompanyCodeCreation -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.CompanyCode@6e005dc9]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.CompanyCode@6e005dc9]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
      </class> <!-- office.sirion.suite.clientAdmin.CompanyCode -->
    </test> <!-- Client Admin - CompanyCode -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - InternalContractingParty" finished-at="2020-04-20T11:08:06Z" duration-ms="2">
      <class name="office.sirion.suite.clientAdmin.InternalContractingParty">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.InternalContractingParty@38ba6ce3]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.InternalContractingParty@38ba6ce3]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.InternalContractingParty -->
    </test> <!-- Client Admin - InternalContractingParty -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - Project" finished-at="2020-04-20T11:08:06Z" duration-ms="47">
      <class name="office.sirion.suite.clientAdmin.Project">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.Project@48d61b48]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="ProjectCreation(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.Project@48d61b48]" started-at="2020-04-20T11:08:06Z" name="ProjectCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProjectCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.Project@48d61b48]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.Project@48d61b48]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.Project -->
    </test> <!-- Client Admin - Project -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - Organization Properties" finished-at="2020-04-20T11:08:06Z" duration-ms="25">
      <class name="office.sirion.suite.clientAdmin.OrganizationProperties">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.OrganizationProperties@20f5281c]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="OrganizationPropertiesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.OrganizationProperties@20f5281c]" started-at="2020-04-20T11:08:06Z" name="OrganizationPropertiesTest" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrganizationPropertiesTest -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.OrganizationProperties@20f5281c]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.OrganizationProperties@20f5281c]" started-at="2020-04-20T11:08:06Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
      </class> <!-- office.sirion.suite.clientAdmin.OrganizationProperties -->
    </test> <!-- Client Admin - Organization Properties -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - Update ServiceSubCategory" finished-at="2020-04-20T11:08:06Z" duration-ms="23">
      <class name="office.sirion.suite.clientAdmin.UpdateServiceSubCategory">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateServiceSubCategory@1e44b638]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="UpdateServiceSubCategoryTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateServiceSubCategory@1e44b638]" started-at="2020-04-20T11:08:06Z" name="UpdateServiceSubCategoryTest" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateServiceSubCategoryTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateServiceSubCategoryTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateServiceSubCategoryTest -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateServiceSubCategory@1e44b638]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateServiceSubCategory -->
    </test> <!-- Client Admin - Update ServiceSubCategory -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - Update ContractService" finished-at="2020-04-20T11:08:06Z" duration-ms="21">
      <class name="office.sirion.suite.clientAdmin.UpdateContractService">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateContractService@7922d892]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="UpdateContractServiceTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateContractService@7922d892]" started-at="2020-04-20T11:08:06Z" name="UpdateContractServiceTest" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="1" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateContractServiceTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateContractServiceTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateContractServiceTest -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateContractService@7922d892]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateContractService -->
    </test> <!-- Client Admin - Update ContractService -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - Update Function" finished-at="2020-04-20T11:08:06Z" duration-ms="38">
      <class name="office.sirion.suite.clientAdmin.UpdateFunction">
        <test-method signature="UpdateFunctionTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateFunction@6f19ac19]" started-at="2020-04-20T11:08:06Z" name="UpdateFunctionTest" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="2" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateFunctionTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateFunctionTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateFunctionTest -->
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateFunction@6f19ac19]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateFunction@6f19ac19]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateFunction -->
    </test> <!-- Client Admin - Update Function -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - Update ServiceCategory" finished-at="2020-04-20T11:08:06Z" duration-ms="21">
      <class name="office.sirion.suite.clientAdmin.UpdateServiceCategory">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateServiceCategory@51133c06]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="UpdateServiceCategoryTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateServiceCategory@51133c06]" started-at="2020-04-20T11:08:06Z" name="UpdateServiceCategoryTest" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="1" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateServiceCategoryTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateServiceCategoryTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateServiceCategoryTest -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateServiceCategory@51133c06]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateServiceCategory -->
    </test> <!-- Client Admin - Update ServiceCategory -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update Project" finished-at="2020-04-20T11:08:07Z" duration-ms="1">
      <class name="office.sirion.suite.clientAdmin.UpdateProject">
        <test-method signature="UpdateProjectTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateProject@6f44a157]" started-at="2020-04-20T11:08:07Z" name="UpdateProjectTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="1" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateProjectTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=5, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=6, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=7, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateProjectTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=5, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=6, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=7, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateProjectTest -->
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateProject@6f44a157]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateProject@6f44a157]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateProject -->
    </test> <!-- Client Admin - Update Project -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update RegionHub" finished-at="2020-04-20T11:08:07Z" duration-ms="1">
      <class name="office.sirion.suite.clientAdmin.UpdateRegionHub">
        <test-method signature="UpdateRegionHubTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateRegionHub@481ba2cf]" started-at="2020-04-20T11:08:07Z" name="UpdateRegionHubTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="1" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateRegionHubTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateRegionHubTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateRegionHubTest -->
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateRegionHub@481ba2cf]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateRegionHub@481ba2cf]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateRegionHub -->
    </test> <!-- Client Admin - Update RegionHub -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update Frequency" finished-at="2020-04-20T11:08:07Z" duration-ms="1">
      <class name="office.sirion.suite.clientAdmin.UpdateFrequency">
        <test-method signature="UpdateFrequencyTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateFrequency@73d983ea]" started-at="2020-04-20T11:08:07Z" name="UpdateFrequencyTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="1" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateFrequencyTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateFrequencyTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateFrequencyTest -->
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateFrequency@73d983ea]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateFrequency@73d983ea]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateFrequency -->
    </test> <!-- Client Admin - Update Frequency -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - Update Geography" finished-at="2020-04-20T11:08:06Z" duration-ms="31">
      <class name="office.sirion.suite.clientAdmin.UpdateGeography">
        <test-method signature="UpdateGeographyTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateGeography@43b9fd5]" started-at="2020-04-20T11:08:06Z" name="UpdateGeographyTest" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="1" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateGeographyTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=5, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=6, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateGeographyTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=5, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=6, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateGeographyTest -->
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateGeography@43b9fd5]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateGeography@43b9fd5]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateGeography -->
    </test> <!-- Client Admin - Update Geography -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update InternalContractingParty" finished-at="2020-04-20T11:08:07Z" duration-ms="3">
      <class name="office.sirion.suite.clientAdmin.UpdateInternalContractingParty">
        <test-method signature="UpdateInternalContractingPartyTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateInternalContractingParty@6d167f58]" started-at="2020-04-20T11:08:07Z" name="UpdateInternalContractingPartyTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="1" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateInternalContractingPartyTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=5, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=6, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateInternalContractingPartyTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=5, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=6, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateInternalContractingPartyTest -->
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateInternalContractingParty@6d167f58]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateInternalContractingParty@6d167f58]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateInternalContractingParty -->
    </test> <!-- Client Admin - Update InternalContractingParty -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update Market" finished-at="2020-04-20T11:08:07Z" duration-ms="4">
      <class name="office.sirion.suite.clientAdmin.UpdateMarket">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateMarket@413f69cc]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="UpdateMarketTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateMarket@413f69cc]" started-at="2020-04-20T11:08:07Z" name="UpdateMarketTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="2" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateMarketTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateMarketTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateMarketTest -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateMarket@413f69cc]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateMarket -->
    </test> <!-- Client Admin - Update Market -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - Update Region" finished-at="2020-04-20T11:08:06Z" duration-ms="25">
      <class name="office.sirion.suite.clientAdmin.UpdateRegion">
        <test-method signature="UpdateRegionTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateRegion@63611043]" started-at="2020-04-20T11:08:06Z" name="UpdateRegionTest" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="1" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateRegionTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=5, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=6, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=7, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateRegionTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=5, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=6, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=7, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateRegionTest -->
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateRegion@63611043]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateRegion@63611043]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateRegion -->
    </test> <!-- Client Admin - Update Region -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update CompanyCode" finished-at="2020-04-20T11:08:07Z" duration-ms="1">
      <class name="office.sirion.suite.clientAdmin.UpdateCompanyCode">
        <test-method signature="UpdateCompanyCodeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateCompanyCode@38b27cdc]" started-at="2020-04-20T11:08:07Z" name="UpdateCompanyCodeTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="1" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateCompanyCodeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=5, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=6, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateCompanyCodeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=5, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=6, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateCompanyCodeTest -->
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateCompanyCode@38b27cdc]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateCompanyCode@38b27cdc]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateCompanyCode -->
    </test> <!-- Client Admin - Update CompanyCode -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update OBPerformanceType" finished-at="2020-04-20T11:08:07Z" duration-ms="1">
      <class name="office.sirion.suite.clientAdmin.UpdateOBPerformanceType">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateOBPerformanceType@479460a6]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="UpdateOBPerformanceTypeTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateOBPerformanceType@479460a6]" started-at="2020-04-20T11:08:07Z" name="UpdateOBPerformanceTypeTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="1" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateOBPerformanceTypeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateOBPerformanceTypeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateOBPerformanceTypeTest -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateOBPerformanceType@479460a6]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateOBPerformanceType -->
    </test> <!-- Client Admin - Update OBPerformanceType -->
    <test started-at="2020-04-20T11:08:06Z" name="Client Admin - Update Service" finished-at="2020-04-20T11:08:06Z" duration-ms="35">
      <class name="office.sirion.suite.clientAdmin.UpdateService">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateService@3f67593e]" started-at="2020-04-20T11:08:06Z" name="checkTestSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="UpdateServiceTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateService@3f67593e]" started-at="2020-04-20T11:08:06Z" name="UpdateServiceTest" data-provider="getTestData" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateServiceTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateServiceTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateServiceTest -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateService@3f67593e]" started-at="2020-04-20T11:08:06Z" name="reportTestResult" finished-at="2020-04-20T11:08:06Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateService -->
    </test> <!-- Client Admin - Update Service -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update OBCategory" finished-at="2020-04-20T11:08:07Z" duration-ms="1">
      <class name="office.sirion.suite.clientAdmin.UpdateOBCategory">
        <test-method signature="UpdateOBCategoryTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateOBCategory@b4711e2]" started-at="2020-04-20T11:08:07Z" name="UpdateOBCategoryTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="1" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateOBCategoryTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateOBCategoryTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateOBCategoryTest -->
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateOBCategory@b4711e2]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateOBCategory@b4711e2]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateOBCategory -->
    </test> <!-- Client Admin - Update OBCategory -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update Tier" finished-at="2020-04-20T11:08:07Z" duration-ms="1">
      <class name="office.sirion.suite.clientAdmin.UpdateTier">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateTier@d771cc9]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="TierCreation(java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateTier@d771cc9]" started-at="2020-04-20T11:08:07Z" name="TierCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="1" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: TierCreation([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: TierCreation([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TierCreation -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateTier@d771cc9]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateTier -->
    </test> <!-- Client Admin - Update Tier -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update OBPhase" finished-at="2020-04-20T11:08:07Z" duration-ms="1">
      <class name="office.sirion.suite.clientAdmin.UpdateOBPhase">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateOBPhase@30c93896]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="UpdateOBPhaseTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateOBPhase@30c93896]" started-at="2020-04-20T11:08:07Z" name="UpdateOBPhaseTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="1" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateOBPhaseTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateOBPhaseTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateOBPhaseTest -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateOBPhase@30c93896]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateOBPhase -->
    </test> <!-- Client Admin - Update OBPhase -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update SLCategory" finished-at="2020-04-20T11:08:07Z" duration-ms="1">
      <class name="office.sirion.suite.clientAdmin.UpdateSLCategory">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateSLCategory@5c44c582]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="UpdateSLCategoryTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateSLCategory@5c44c582]" started-at="2020-04-20T11:08:07Z" name="UpdateSLCategoryTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="1" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateSLCategoryTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateSLCategoryTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateSLCategoryTest -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateSLCategory@5c44c582]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateSLCategory -->
    </test> <!-- Client Admin - Update SLCategory -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update SLItem" finished-at="2020-04-20T11:08:07Z" duration-ms="4">
      <class name="office.sirion.suite.clientAdmin.UpdateSLItem">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateSLItem@78d6692f]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="UpdateSLItemTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateSLItem@78d6692f]" started-at="2020-04-20T11:08:07Z" name="UpdateSLItemTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="2" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateSLItemTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateSLItemTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateSLItemTest -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateSLItem@78d6692f]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateSLItem -->
    </test> <!-- Client Admin - Update SLItem -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update TermType" finished-at="2020-04-20T11:08:07Z" duration-ms="2">
      <class name="office.sirion.suite.clientAdmin.UpdateTermType">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateTermType@1046d517]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="UpdateTermTypeTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateTermType@1046d517]" started-at="2020-04-20T11:08:07Z" name="UpdateTermTypeTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateTermTypeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateTermTypeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateTermTypeTest -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateTermType@1046d517]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateTermType -->
    </test> <!-- Client Admin - Update TermType -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update VendorClassification" finished-at="2020-04-20T11:08:07Z" duration-ms="1">
      <class name="office.sirion.suite.clientAdmin.UpdateVendorClassification">
        <test-method signature="UpdateVendorClassificationTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateVendorClassification@1fc32e4f]" started-at="2020-04-20T11:08:07Z" name="UpdateVendorClassificationTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="1" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateVendorClassificationTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateVendorClassificationTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateVendorClassificationTest -->
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateVendorClassification@1fc32e4f]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateVendorClassification@1fc32e4f]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateVendorClassification -->
    </test> <!-- Client Admin - Update VendorClassification -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update SLSubCategory" finished-at="2020-04-20T11:08:07Z" duration-ms="2">
      <class name="office.sirion.suite.clientAdmin.UpdateSLSubCategory">
        <test-method signature="UpdateSLSubCategoryTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateSLSubCategory@15713d56]" started-at="2020-04-20T11:08:07Z" name="UpdateSLSubCategoryTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="1" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateSLSubCategoryTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateSLSubCategoryTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateSLSubCategoryTest -->
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateSLSubCategory@15713d56]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateSLSubCategory@15713d56]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateSLSubCategory -->
    </test> <!-- Client Admin - Update SLSubCategory -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update CRType" finished-at="2020-04-20T11:08:07Z" duration-ms="2">
      <class name="office.sirion.suite.clientAdmin.UpdateCRType">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateCRType@6ccdb29f]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="UpdateCRTypeTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateCRType@6ccdb29f]" started-at="2020-04-20T11:08:07Z" name="UpdateCRTypeTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateCRTypeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateCRTypeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateCRTypeTest -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateCRType@6ccdb29f]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateCRType -->
    </test> <!-- Client Admin - Update CRType -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update ActionType" finished-at="2020-04-20T11:08:07Z" duration-ms="6">
      <class name="office.sirion.suite.clientAdmin.UpdateActionType">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateActionType@1800a575]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="UpdateActionTypeTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateActionType@1800a575]" started-at="2020-04-20T11:08:07Z" name="UpdateActionTypeTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="1" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateActionTypeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateActionTypeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateActionTypeTest -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateActionType@1800a575]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateActionType -->
    </test> <!-- Client Admin - Update ActionType -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update ContractPaper" finished-at="2020-04-20T11:08:07Z" duration-ms="3">
      <class name="office.sirion.suite.clientAdmin.UpdateContractPaper">
        <test-method signature="UpdateContractPaperTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateContractPaper@67545b57]" started-at="2020-04-20T11:08:07Z" name="UpdateContractPaperTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="2" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateContractPaperTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateContractPaperTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateContractPaperTest -->
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateContractPaper@67545b57]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateContractPaper@67545b57]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateContractPaper -->
    </test> <!-- Client Admin - Update ContractPaper -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update ContractType" finished-at="2020-04-20T11:08:07Z" duration-ms="1">
      <class name="office.sirion.suite.clientAdmin.UpdateContractType">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateContractType@7a362b6b]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="UpdateTermTypeTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateContractType@7a362b6b]" started-at="2020-04-20T11:08:07Z" name="UpdateTermTypeTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="1" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateTermTypeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateTermTypeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateTermTypeTest -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateContractType@7a362b6b]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateContractType -->
    </test> <!-- Client Admin - Update ContractType -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update GovernanceBodyType" finished-at="2020-04-20T11:08:07Z" duration-ms="1">
      <class name="office.sirion.suite.clientAdmin.UpdateGovernanceBodyType">
        <test-method signature="UpdateGovernanceBodyTypeTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateGovernanceBodyType@6ce86ce1]" started-at="2020-04-20T11:08:07Z" name="UpdateGovernanceBodyTypeTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="1" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateGovernanceBodyTypeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateGovernanceBodyTypeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateGovernanceBodyTypeTest -->
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateGovernanceBodyType@6ce86ce1]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateGovernanceBodyType@6ce86ce1]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateGovernanceBodyType -->
    </test> <!-- Client Admin - Update GovernanceBodyType -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update WORType" finished-at="2020-04-20T11:08:07Z" duration-ms="2">
      <class name="office.sirion.suite.clientAdmin.UpdateWORType">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateWORType@9ebe38b]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="UpdateInterpretationTypeTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateWORType@9ebe38b]" started-at="2020-04-20T11:08:07Z" name="UpdateInterpretationTypeTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateInterpretationTypeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateInterpretationTypeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateInterpretationTypeTest -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateWORType@9ebe38b]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateWORType -->
    </test> <!-- Client Admin - Update WORType -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update UnitType" finished-at="2020-04-20T11:08:07Z" duration-ms="2">
      <class name="office.sirion.suite.clientAdmin.UpdateUnitType">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateUnitType@4c1f22f3]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="UpdateUnitTypeTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateUnitType@4c1f22f3]" started-at="2020-04-20T11:08:07Z" name="UpdateUnitTypeTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateUnitTypeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateUnitTypeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateUnitTypeTest -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateUnitType@4c1f22f3]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateUnitType -->
    </test> <!-- Client Admin - Update UnitType -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update AgreementType" finished-at="2020-04-20T11:08:07Z" duration-ms="1">
      <class name="office.sirion.suite.clientAdmin.UpdateAgreementType">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateAgreementType@602e0143]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="UpdateAgreementTypeTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateAgreementType@602e0143]" started-at="2020-04-20T11:08:07Z" name="UpdateAgreementTypeTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="1" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateAgreementTypeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateAgreementTypeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateAgreementTypeTest -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateAgreementType@602e0143]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateAgreementType -->
    </test> <!-- Client Admin - Update AgreementType -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update InterpretationType" finished-at="2020-04-20T11:08:07Z" duration-ms="1">
      <class name="office.sirion.suite.clientAdmin.UpdateInterpretationType">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateInterpretationType@3cdf2c61]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="UpdateInterpretationTypeTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateInterpretationType@3cdf2c61]" started-at="2020-04-20T11:08:07Z" name="UpdateInterpretationTypeTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateInterpretationTypeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateInterpretationTypeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateInterpretationTypeTest -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateInterpretationType@3cdf2c61]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateInterpretationType -->
    </test> <!-- Client Admin - Update InterpretationType -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update CRClass" finished-at="2020-04-20T11:08:07Z" duration-ms="5">
      <class name="office.sirion.suite.clientAdmin.UpdateCRClass">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateCRClass@4b41dd5c]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="UpdateCRClassTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateCRClass@4b41dd5c]" started-at="2020-04-20T11:08:07Z" name="UpdateCRClassTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="1" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateCRClassTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateCRClassTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateCRClassTest -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateCRClass@4b41dd5c]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateCRClass -->
    </test> <!-- Client Admin - Update CRClass -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update ClauseCategory" finished-at="2020-04-20T11:08:07Z" duration-ms="1">
      <class name="office.sirion.suite.clientAdmin.UpdateClauseCategory">
        <test-method signature="UpdateClauseCategoryTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateClauseCategory@36328d33]" started-at="2020-04-20T11:08:07Z" name="UpdateClauseCategoryTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateClauseCategoryTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateClauseCategoryTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateClauseCategoryTest -->
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateClauseCategory@36328d33]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateClauseCategory@36328d33]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateClauseCategory -->
    </test> <!-- Client Admin - Update ClauseCategory -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update ClauseType" finished-at="2020-04-20T11:08:07Z" duration-ms="1">
      <class name="office.sirion.suite.clientAdmin.UpdateClauseType">
        <test-method signature="UpdateClauseTypeTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateClauseType@29526c05]" started-at="2020-04-20T11:08:07Z" name="UpdateClauseTypeTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="1" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateClauseTypeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateClauseTypeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateClauseTypeTest -->
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateClauseType@29526c05]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateClauseType@29526c05]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateClauseType -->
    </test> <!-- Client Admin - Update ClauseType -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update RiskType" finished-at="2020-04-20T11:08:07Z" duration-ms="1">
      <class name="office.sirion.suite.clientAdmin.UpdateRiskType">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateRiskType@2b76ff4e]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="UpdateRiskTypeTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateRiskType@2b76ff4e]" started-at="2020-04-20T11:08:07Z" name="UpdateRiskTypeTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="1" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateRiskTypeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateRiskTypeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateRiskTypeTest -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateRiskType@2b76ff4e]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateRiskType -->
    </test> <!-- Client Admin - Update RiskType -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update IssueType" finished-at="2020-04-20T11:08:07Z" duration-ms="5">
      <class name="office.sirion.suite.clientAdmin.UpdateIssueType">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateIssueType@2fd953a6]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="UpdateIssueTypeTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateIssueType@2fd953a6]" started-at="2020-04-20T11:08:07Z" name="UpdateIssueTypeTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateIssueTypeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateIssueTypeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateIssueTypeTest -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateIssueType@2fd953a6]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateIssueType -->
    </test> <!-- Client Admin - Update IssueType -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update TemplateCategory" finished-at="2020-04-20T11:08:07Z" duration-ms="1">
      <class name="office.sirion.suite.clientAdmin.UpdateTemplateCategory">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateTemplateCategory@554e218]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="UpdateTemplateCategoryTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateTemplateCategory@554e218]" started-at="2020-04-20T11:08:07Z" name="UpdateTemplateCategoryTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="1" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateTemplateCategoryTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateTemplateCategoryTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateTemplateCategoryTest -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateTemplateCategory@554e218]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateTemplateCategory -->
    </test> <!-- Client Admin - Update TemplateCategory -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update PaperType" finished-at="2020-04-20T11:08:07Z" duration-ms="1">
      <class name="office.sirion.suite.clientAdmin.UpdatePaperType">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdatePaperType@55493582]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="UpdatePaperTypeTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdatePaperType@55493582]" started-at="2020-04-20T11:08:07Z" name="UpdatePaperTypeTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="1" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdatePaperTypeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdatePaperTypeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdatePaperTypeTest -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdatePaperType@55493582]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdatePaperType -->
    </test> <!-- Client Admin - Update PaperType -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update BusinessUnit" finished-at="2020-04-20T11:08:07Z" duration-ms="3">
      <class name="office.sirion.suite.clientAdmin.UpdateBusinessUnit">
        <test-method signature="UpdateBusinessUnitTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateBusinessUnit@4b79ac84]" started-at="2020-04-20T11:08:07Z" name="UpdateBusinessUnitTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="2" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateBusinessUnitTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateBusinessUnitTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateBusinessUnitTest -->
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateBusinessUnit@4b79ac84]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateBusinessUnit@4b79ac84]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateBusinessUnit -->
    </test> <!-- Client Admin - Update BusinessUnit -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update CompanyPosition" finished-at="2020-04-20T11:08:07Z" duration-ms="1">
      <class name="office.sirion.suite.clientAdmin.UpdateCompanyPosition">
        <test-method signature="UpdateCompanyPositionTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateCompanyPosition@ab7395e]" started-at="2020-04-20T11:08:07Z" name="UpdateCompanyPositionTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateCompanyPositionTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateCompanyPositionTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateCompanyPositionTest -->
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateCompanyPosition@ab7395e]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateCompanyPosition@ab7395e]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateCompanyPosition -->
    </test> <!-- Client Admin - Update CompanyPosition -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update BusinessLine" finished-at="2020-04-20T11:08:07Z" duration-ms="2">
      <class name="office.sirion.suite.clientAdmin.UpdateBusinessLine">
        <test-method signature="UpdateBusinessLineTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateBusinessLine@3fc9504b]" started-at="2020-04-20T11:08:07Z" name="UpdateBusinessLineTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="1" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateBusinessLineTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateBusinessLineTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateBusinessLineTest -->
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateBusinessLine@3fc9504b]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateBusinessLine@3fc9504b]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateBusinessLine -->
    </test> <!-- Client Admin - Update BusinessLine -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update Discrepancy Reason Type" finished-at="2020-04-20T11:08:07Z" duration-ms="1">
      <class name="office.sirion.suite.clientAdmin.UpdateDiscrepancyReasonType">
        <test-method signature="UpdateDiscrepancyReasonTypeTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateDiscrepancyReasonType@1b955cac]" started-at="2020-04-20T11:08:07Z" name="UpdateDiscrepancyReasonTypeTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="1" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateDiscrepancyReasonTypeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateDiscrepancyReasonTypeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateDiscrepancyReasonTypeTest -->
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateDiscrepancyReasonType@1b955cac]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateDiscrepancyReasonType@1b955cac]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateDiscrepancyReasonType -->
    </test> <!-- Client Admin - Update Discrepancy Reason Type -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Notification Alert" finished-at="2020-04-20T11:08:07Z" duration-ms="5">
      <class name="office.sirion.suite.clientAdmin.NotificationAlert">
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.NotificationAlert@3c9c0d96]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method signature="NotificationAlertCreation(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.NotificationAlert@3c9c0d96]" started-at="2020-04-20T11:08:07Z" name="NotificationAlertCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NotificationAlertCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.NotificationAlert@3c9c0d96]" started-at="2020-04-20T11:08:07Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method signature="NotificationAlertCreation(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.NotificationAlert@3c9c0d96]" started-at="2020-04-20T11:08:07Z" name="NotificationAlertCreation" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NotificationAlertCreation -->
        <test-method is-config="true" signature="reportDataSetResult(org.testng.ITestResult)[pri:0, instance:office.sirion.suite.clientAdmin.NotificationAlert@3c9c0d96]" started-at="2020-04-20T11:08:07Z" name="reportDataSetResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportDataSetResult -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.NotificationAlert@3c9c0d96]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.NotificationAlert -->
    </test> <!-- Client Admin - Notification Alert -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update IndustryType" finished-at="2020-04-20T11:08:07Z" duration-ms="1">
      <class name="office.sirion.suite.clientAdmin.UpdateIndustryType">
        <test-method signature="UpdateIndustryTypeTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateIndustryType@d62fe5b]" started-at="2020-04-20T11:08:07Z" name="UpdateIndustryTypeTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="1" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateIndustryTypeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateIndustryTypeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateIndustryTypeTest -->
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateIndustryType@d62fe5b]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateIndustryType@d62fe5b]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateIndustryType -->
    </test> <!-- Client Admin - Update IndustryType -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Update TransactionType" finished-at="2020-04-20T11:08:07Z" duration-ms="3">
      <class name="office.sirion.suite.clientAdmin.UpdateTransactionType">
        <test-method signature="UpdateTransactionTypeTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.UpdateTransactionType@7749bf93]" started-at="2020-04-20T11:08:07Z" name="UpdateTransactionTypeTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="1" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: UpdateTransactionTypeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: UpdateTransactionTypeTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: []
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateTransactionTypeTest -->
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateTransactionType@7749bf93]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.UpdateTransactionType@7749bf93]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
      </class> <!-- office.sirion.suite.clientAdmin.UpdateTransactionType -->
    </test> <!-- Client Admin - Update TransactionType -->
    <test started-at="2020-04-20T11:08:07Z" name="Client Admin - Password Policy" finished-at="2020-04-20T11:08:07Z" duration-ms="4">
      <class name="office.sirion.suite.clientAdmin.PasswordPolicy">
        <test-method is-config="true" signature="checkSuiteSkip()[pri:0, instance:office.sirion.suite.clientAdmin.PasswordPolicy@2631f68c]" started-at="2020-04-20T11:08:03Z" name="checkSuiteSkip" finished-at="2020-04-20T11:08:06Z" duration-ms="2840" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Runmode of Client Admin Suite set to NO. So Skipping all tests in Client Admin Suite]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Runmode of Client Admin Suite set to NO. So Skipping all tests in Client Admin Suite
at office.sirion.suite.clientAdmin.TestSuiteBase.checkSuiteSkip(TestSuiteBase.java:17)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:401)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1204)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkSuiteSkip -->
        <test-method signature="PasswordPolicyTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:office.sirion.suite.clientAdmin.PasswordPolicy@2631f68c]" started-at="2020-04-20T11:08:07Z" name="PasswordPolicyTest" data-provider="getTestData" finished-at="2020-04-20T11:08:07Z" duration-ms="3" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: PasswordPolicyTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=5, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=6, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=7, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=8, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=9, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=10, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=11, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=12, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=13, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=14, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=15, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=16, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=17, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) No,(java.lang.String) 30.0,(java.lang.String) 30.0,(java.lang.String) 30.0,(java.lang.String) No,(java.lang.String) 5.0,(java.lang.String) 8.0,(java.lang.String) Must mix alpha and numeric characters,(java.lang.String) Cannot Contain Password,(java.lang.String) 20.0,(java.lang.String) No,(java.lang.String) 60.0,(java.lang.String) No,(java.lang.String) 20.0,(java.lang.String) 180.0,(java.lang.String) No,(java.lang.String) Yes,(java.lang.String) Auto reset users passwords,(java.lang.String) ]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: PasswordPolicyTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=5, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=6, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=7, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=8, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=9, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=10, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=11, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=12, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=13, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=14, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=15, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=16, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=17, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) No,(java.lang.String) 30.0,(java.lang.String) 30.0,(java.lang.String) 30.0,(java.lang.String) No,(java.lang.String) 5.0,(java.lang.String) 8.0,(java.lang.String) Must mix alpha and numeric characters,(java.lang.String) Cannot Contain Password,(java.lang.String) 20.0,(java.lang.String) No,(java.lang.String) 60.0,(java.lang.String) No,(java.lang.String) 20.0,(java.lang.String) 180.0,(java.lang.String) No,(java.lang.String) Yes,(java.lang.String) Auto reset users passwords,(java.lang.String) ]
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
at java.base/java.lang.Thread.run(Thread.java:844)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PasswordPolicyTest -->
        <test-method is-config="true" signature="checkTestSkip()[pri:0, instance:office.sirion.suite.clientAdmin.PasswordPolicy@2631f68c]" started-at="2020-04-20T11:08:07Z" name="checkTestSkip" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestSkip -->
        <test-method is-config="true" signature="reportTestResult()[pri:0, instance:office.sirion.suite.clientAdmin.PasswordPolicy@2631f68c]" started-at="2020-04-20T11:08:07Z" name="reportTestResult" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTestResult -->
        <test-method is-config="true" signature="checkSuiteClosure()[pri:0, instance:office.sirion.suite.clientAdmin.PasswordPolicy@2631f68c]" started-at="2020-04-20T11:08:07Z" name="checkSuiteClosure" finished-at="2020-04-20T11:08:07Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkSuiteClosure -->
      </class> <!-- office.sirion.suite.clientAdmin.PasswordPolicy -->
    </test> <!-- Client Admin - Password Policy -->
  </suite> <!-- Client Admin Suite -->
</testng-results>
